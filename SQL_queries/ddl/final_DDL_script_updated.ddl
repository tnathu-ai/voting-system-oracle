-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-09-04 15:20:11 AEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE ballot (
    ballotid                    NUMBER NOT NULL,
    electioncode                NUMBER NOT NULL,
    candelection_candelectionid NUMBER NOT NULL,
    candelectioncode            NUMBER NOT NULL,
    candelectionelectoratename  VARCHAR2(200) NOT NULL
);

COMMENT ON TABLE ballot IS
    'Table representing individual ballots with preferences cast by voters in a specific election.';

ALTER TABLE ballot ADD CONSTRAINT ballot_pk PRIMARY KEY ( ballotid );
TABLESPACE users STORAGE (INITIAL 5G NEXT 1G PCTINCREASE 1)
PARTITION BY RANGE (electioncode) (
    PARTITION p_2020 VALUES LESS THAN (2021),
    PARTITION p_2021 VALUES LESS THAN (2022),
    PARTITION p_2022 VALUES LESS THAN (2023),
    PARTITION p_future VALUES LESS THAN (MAXVALUE)
);

CREATE TABLE ballotissuance (
    issuanceid            NUMBER NOT NULL,
    pollingstationname    VARCHAR2(100) NOT NULL,
    voterreference        VARCHAR2(4000),
    timestamp             TIMESTAMP NOT NULL,
    voter_voterid         NUMBER NOT NULL,
    election_electioncode NUMBER NOT NULL
);

COMMENT ON TABLE ballotissuance IS
    'Table logging the issuance of ballots to registered voters at polling stations with timestamps, connected to specific elections.'
    ;

ALTER TABLE ballotissuance ADD CONSTRAINT ballotissuance_pk PRIMARY KEY ( issuanceid,
                                                                          voter_voterid );

CREATE TABLE candelection (
    candelectionid            NUMBER NOT NULL,
    campaignstartdate         DATE,
    campaignenddate           DATE,
    campaignbudget            NUMBER(10, 2),
    candidate_candid          NUMBER NOT NULL,
    election_electioncode     NUMBER NOT NULL,
    electorate_electoratename VARCHAR2(200) NOT NULL,
    candidate_partycode       VARCHAR2(10) NOT NULL
);

COMMENT ON TABLE candelection IS
    'Linking table capturing each candidate''''s participation in a specific election for a designated electorate.';

ALTER TABLE candelection
    ADD CONSTRAINT candelection_pk PRIMARY KEY ( candelectionid,
                                                 election_electioncode,
                                                 electorate_electoratename );

CREATE TABLE candidate (
    candid                    NUMBER NOT NULL,
    candidatename             VARCHAR2(100) NOT NULL,
    contactdetailname         VARCHAR2(100) NOT NULL,
    contactdetaildaytimephone VARCHAR2(15),
    contactdetailmobilephone  VARCHAR2(15) NOT NULL,
    contactdetailemail        VARCHAR2(100) NOT NULL,
    party_partycode           VARCHAR2(10) NOT NULL
);

COMMENT ON TABLE candidate IS
    'Table storing details of individual candidates participating in the elections, including their contact details and affiliated political party.'
    ;

ALTER TABLE candidate ADD CONSTRAINT candidate_pk PRIMARY KEY ( candid,
                                                                party_partycode );

CREATE TABLE election (
    electioncode          NUMBER NOT NULL,
    dateofelection        DATE NOT NULL,
    typeofelection        VARCHAR2(100),
    totalelectorates      INTEGER NOT NULL,
    totalregisteredvoters INTEGER NOT NULL
);

COMMENT ON TABLE election IS
    'Table recording details of each specific election event, capturing the date, type, and other related metrics.';

ALTER TABLE election ADD CONSTRAINT election_pk PRIMARY KEY ( electioncode );

CREATE TABLE electorate (
    electoratename               VARCHAR2(200) NOT NULL,
    totalcurrentregisteredvoters INTEGER NOT NULL,
    historicaldate               DATE NOT NULL,
    historicalnumberofvoters     INTEGER NOT NULL,
    currentmpname                VARCHAR2(100) NOT NULL
);

COMMENT ON TABLE electorate IS
    'Table detailing individual electorates with information on current registered voters, historical voter data, and current representatives.'
    ;
  -- Repeat for all 151 electorates
PARTITION BY LIST (Electorate)
(
    PARTITION electorate_1 VALUES ('Elect1'),
    PARTITION electorate_2 VALUES ('Elect2'),
    PARTITION electorate_3 VALUES ('Elect3'),
    PARTITION electorate_4 VALUES ('Elect4'),
    PARTITION electorate_5 VALUES ('Elect5'),
    PARTITION electorate_6 VALUES ('Elect6'),
    PARTITION electorate_7 VALUES ('Elect7'),
    PARTITION electorate_8 VALUES ('Elect8'),
    PARTITION electorate_9 VALUES ('Elect9'),
    PARTITION electorate_10 VALUES ('Elect10'),
    PARTITION electorate_11 VALUES ('Elect11'),
    PARTITION electorate_12 VALUES ('Elect12'),
    PARTITION electorate_13 VALUES ('Elect13'),
    PARTITION electorate_14 VALUES ('Elect14'),
    PARTITION electorate_15 VALUES ('Elect15'),
    PARTITION electorate_16 VALUES ('Elect16'),
    PARTITION electorate_17 VALUES ('Elect17'),
    PARTITION electorate_18 VALUES ('Elect18'),
    PARTITION electorate_19 VALUES ('Elect19'),
    PARTITION electorate_20 VALUES ('Elect20'),
    PARTITION electorate_21 VALUES ('Elect21'),
    PARTITION electorate_22 VALUES ('Elect22'),
    PARTITION electorate_23 VALUES ('Elect23'),
    PARTITION electorate_24 VALUES ('Elect24'),
    PARTITION electorate_25 VALUES ('Elect25'),
    PARTITION electorate_26 VALUES ('Elect26'),
    PARTITION electorate_27 VALUES ('Elect27'),
    PARTITION electorate_28 VALUES ('Elect28'),
    PARTITION electorate_29 VALUES ('Elect29'),
    PARTITION electorate_30 VALUES ('Elect30'),
    PARTITION electorate_31 VALUES ('Elect31'),
    PARTITION electorate_32 VALUES ('Elect32'),
    PARTITION electorate_33 VALUES ('Elect33'),
    PARTITION electorate_34 VALUES ('Elect34'),
    PARTITION electorate_35 VALUES ('Elect35'),
    PARTITION electorate_36 VALUES ('Elect36'),
    PARTITION electorate_37 VALUES ('Elect37'),
    PARTITION electorate_38 VALUES ('Elect38'),
    PARTITION electorate_39 VALUES ('Elect39'),
    PARTITION electorate_40 VALUES ('Elect40'),
    PARTITION electorate_41 VALUES ('Elect41'),
    PARTITION electorate_42 VALUES ('Elect42'),
    PARTITION electorate_43 VALUES ('Elect43'),
    PARTITION electorate_44 VALUES ('Elect44'),
    PARTITION electorate_45 VALUES ('Elect45'),
    PARTITION electorate_46 VALUES ('Elect46'),
    PARTITION electorate_47 VALUES ('Elect47'),
    PARTITION electorate_48 VALUES ('Elect48'),
    PARTITION electorate_49 VALUES ('Elect49'),
    PARTITION electorate_50 VALUES ('Elect50'),
    PARTITION electorate_51 VALUES ('Elect51'),
    PARTITION electorate_52 VALUES ('Elect52'),
    PARTITION electorate_53 VALUES ('Elect53'),
    PARTITION electorate_54 VALUES ('Elect54'),
    PARTITION electorate_55 VALUES ('Elect55'),
    PARTITION electorate_56 VALUES ('Elect56'),
    PARTITION electorate_57 VALUES ('Elect57'),
    PARTITION electorate_58 VALUES ('Elect58'),
    PARTITION electorate_59 VALUES ('Elect59'),
    PARTITION electorate_60 VALUES ('Elect60'),
    PARTITION electorate_61 VALUES ('Elect61'),
    PARTITION electorate_62 VALUES ('Elect62'),
    PARTITION electorate_63 VALUES ('Elect63'),
    PARTITION electorate_64 VALUES ('Elect64'),
    PARTITION electorate_65 VALUES ('Elect65'),
    PARTITION electorate_66 VALUES ('Elect66'),
    PARTITION electorate_67 VALUES ('Elect67'),
    PARTITION electorate_68 VALUES ('Elect68'),
    PARTITION electorate_69 VALUES ('Elect69'),
    PARTITION electorate_70 VALUES ('Elect70'),
    PARTITION electorate_71 VALUES ('Elect71'),
    PARTITION electorate_72 VALUES ('Elect72'),
    PARTITION electorate_73 VALUES ('Elect73'),
    PARTITION electorate_74 VALUES ('Elect74'),
    PARTITION electorate_75 VALUES ('Elect75'),
    PARTITION electorate_76 VALUES ('Elect76'),
    PARTITION electorate_77 VALUES ('Elect77'),
    PARTITION electorate_78 VALUES ('Elect78'),
    PARTITION electorate_79 VALUES ('Elect79'),
    PARTITION electorate_80 VALUES ('Elect80'),
    PARTITION electorate_81 VALUES ('Elect81'),
    PARTITION electorate_82 VALUES ('Elect82'),
    PARTITION electorate_83 VALUES ('Elect83'),
    PARTITION electorate_84 VALUES ('Elect84'),
    PARTITION electorate_85 VALUES ('Elect85'),
    PARTITION electorate_86 VALUES ('Elect86'),
    PARTITION electorate_87 VALUES ('Elect87'),
    PARTITION electorate_88 VALUES ('Elect88'),
    PARTITION electorate_89 VALUES ('Elect89'),
    PARTITION electorate_90 VALUES ('Elect90'),
    PARTITION electorate_91 VALUES ('Elect91'),
    PARTITION electorate_92 VALUES ('Elect92'),
    PARTITION electorate_93 VALUES ('Elect93'),
    PARTITION electorate_94 VALUES ('Elect94'),
    PARTITION electorate_95 VALUES ('Elect95'),
    PARTITION electorate_96 VALUES ('Elect96'),
    PARTITION electorate_97 VALUES ('Elect97'),
    PARTITION electorate_98 VALUES ('Elect98'),
    PARTITION electorate_99 VALUES ('Elect99'),
    PARTITION electorate_100 VALUES ('Elect100'),
    PARTITION electorate_101 VALUES ('Elect101'),
    PARTITION electorate_102 VALUES ('Elect102'),
    PARTITION electorate_103 VALUES ('Elect103'),
    PARTITION electorate_104 VALUES ('Elect104'),
    PARTITION electorate_105 VALUES ('Elect105'),
    PARTITION electorate_106 VALUES ('Elect106'),
    PARTITION electorate_107 VALUES ('Elect107'),
    PARTITION electorate_108 VALUES ('Elect108'),
    PARTITION electorate_109 VALUES ('Elect109'),
    PARTITION electorate_110 VALUES ('Elect110'),
    PARTITION electorate_111 VALUES ('Elect111'),
    PARTITION electorate_112 VALUES ('Elect112'),
    PARTITION electorate_113 VALUES ('Elect113'),
    PARTITION electorate_114 VALUES ('Elect114'),
    PARTITION electorate_115 VALUES ('Elect115'),
    PARTITION electorate_116 VALUES ('Elect116'),
    PARTITION electorate_117 VALUES ('Elect117'),
    PARTITION electorate_118 VALUES ('Elect118'),
    PARTITION electorate_119 VALUES ('Elect119'),
    PARTITION electorate_120 VALUES ('Elect120'),
    PARTITION electorate_121 VALUES ('Elect121'),
    PARTITION electorate_122 VALUES ('Elect122'),
    PARTITION electorate_123 VALUES ('Elect123'),
    PARTITION electorate_124 VALUES ('Elect124'),
    PARTITION electorate_125 VALUES ('Elect125'),
    PARTITION electorate_126 VALUES ('Elect126'),
    PARTITION electorate_127 VALUES ('Elect127'),
    PARTITION electorate_128 VALUES ('Elect128'),
    PARTITION electorate_129 VALUES ('Elect129'),
    PARTITION electorate_130 VALUES ('Elect130'),
    PARTITION electorate_131 VALUES ('Elect131'),
    PARTITION electorate_132 VALUES ('Elect132'),
    PARTITION electorate_133 VALUES ('Elect133'),
    PARTITION electorate_134 VALUES ('Elect134'),
    PARTITION electorate_135 VALUES ('Elect135'),
    PARTITION electorate_136 VALUES ('Elect136'),
    PARTITION electorate_137 VALUES ('Elect137'),
    PARTITION electorate_138 VALUES ('Elect138'),
    PARTITION electorate_139 VALUES ('Elect139'),
    PARTITION electorate_140 VALUES ('Elect140'),
    PARTITION electorate_141 VALUES ('Elect141'),
    PARTITION electorate_142 VALUES ('Elect142'),
    PARTITION electorate_143 VALUES ('Elect143'),
    PARTITION electorate_144 VALUES ('Elect144'),
    PARTITION electorate_145 VALUES ('Elect145'),
    PARTITION electorate_146 VALUES ('Elect146'),
    PARTITION electorate_147 VALUES ('Elect147'),
    PARTITION electorate_148 VALUES ('Elect148'),
    PARTITION electorate_149 VALUES ('Elect149'),
    PARTITION electorate_150 VALUES ('Elect150'),
    PARTITION electorate_151 VALUES ('Elect151')
);

  
ALTER TABLE electorate ADD CONSTRAINT electorate_pk PRIMARY KEY ( electoratename );

CREATE TABLE iterationresult (
    iterationid                  NUMBER NOT NULL,
    iterationnumber              NUMBER NOT NULL,
    result_resultid              NUMBER NOT NULL,
    resultcandelectionid         NUMBER NOT NULL,
    resultcandelectioncode       NUMBER NOT NULL,
    resultcandelectionelectorate VARCHAR2(200) NOT NULL
);

COMMENT ON TABLE iterationresult IS
    'Table recording the results of each iteration of vote counting, including the excluded candidate if any.';

ALTER TABLE iterationresult
    ADD CONSTRAINT iterationresult_pk PRIMARY KEY ( iterationid,
                                                    result_resultid,
                                                    resultcandelectionid,
                                                    resultcandelectioncode,
                                                    resultcandelectionelectorate );

CREATE TABLE party (
    partycode                VARCHAR2(10) NOT NULL,
    partyname                VARCHAR2(100) NOT NULL,
    partylogo                BLOB,
    partyheadquartersaddr    VARCHAR2(200) NOT NULL,
    secretaryname            VARCHAR2(100) NOT NULL,
    contactpersonname        VARCHAR2(100) NOT NULL,
    contactpersondayphone    VARCHAR2(15),
    contactpersonmobilephone VARCHAR2(15) NOT NULL,
    contactpersonemail       VARCHAR2(100) NOT NULL
);

COMMENT ON TABLE party IS
    'Table representing political parties with details about their name, logo, headquarters, and contact information.';

ALTER TABLE party ADD CONSTRAINT party_pk PRIMARY KEY ( partycode );

CREATE TABLE preference (
    preferenceid              NUMBER NOT NULL,
    preferenceorder           NUMBER NOT NULL,
    ballot_ballotid           NUMBER NOT NULL,
    candidate_candid          NUMBER NOT NULL,
    candidate_party_partycode VARCHAR2(10) NOT NULL
);

COMMENT ON TABLE preference IS
    'Table representing the preferences cast by voters in a specific ballot, ordered by preference.';

ALTER TABLE preference ADD CONSTRAINT preference_pk PRIMARY KEY ( preferenceid );

CREATE TABLE result (
    resultid                    NUMBER NOT NULL,
    primaryvotes                INTEGER NOT NULL,
    preferentialvotecount       INTEGER NOT NULL,
    candelection_candelectionid NUMBER NOT NULL,
    candelectioncode            NUMBER NOT NULL,
    candelectionelectoratename  VARCHAR2(200) NOT NULL
);

COMMENT ON TABLE result IS
    'Table storing election results, detailing primary and preferential votes for candidates across electorates and elections.';

ALTER TABLE result
    ADD CONSTRAINT result_pk PRIMARY KEY ( resultid,
                                           candelection_candelectionid,
                                           candelectioncode,
                                           candelectionelectoratename );
                                           
-- Voter Table with Partitioning by State
CREATE TABLE voter (
    voterid                   NUMBER NOT NULL,
    title                     VARCHAR2(10),
    firstname                 VARCHAR2(50) NOT NULL,
    middlename                VARCHAR2(50),
    lastname                  VARCHAR2(50) NOT NULL,
    gender                    VARCHAR2(25),
    dateofbirth               DATE NOT NULL,
    residentialaddrunit       VARCHAR2(10),
    residentialaddrstreet     VARCHAR2(200) NOT NULL,
    residentialaddrsuburb     VARCHAR2(100) NOT NULL,
    residentialaddrpostcode   NUMBER(4) NOT NULL,
    residentialaddrstate      CHAR(3) NOT NULL,
    postaladdrunit            VARCHAR2(10),
    postaladdrstreet          VARCHAR2(200),
    postaladdrsuburb          VARCHAR2(100),
    postaladdrpostcode        NUMBER(4),
    postaladdrstate           CHAR(3),
    dayphone                  VARCHAR2(15),
    mobilephone               VARCHAR2(15) NOT NULL,
    email                     VARCHAR2(100) NOT NULL,
    electorate_electoratename VARCHAR2(200) NOT NULL
);

COMMENT ON TABLE voter IS
    'Table storing details of individuals registered to vote in elections, including their personal and contact information.';

ALTER TABLE voter ADD CONSTRAINT voter_pk PRIMARY KEY ( voterid );
TABLESPACE users
STORAGE (INITIAL 17G NEXT 2G PCTINCREASE 1)
PARTITION BY RANGE (state) (
    PARTITION p_nsw VALUES LESS THAN ('NSW'),
    PARTITION p_qld VALUES LESS THAN ('QLD'),
    PARTITION p_vic VALUES LESS THAN ('VIC'),
    PARTITION p_sa VALUES LESS THAN ('SA'),
    PARTITION p_tas VALUES LESS THAN ('TAS'),
    PARTITION p_wa VALUES LESS THAN ('WA'),
    PARTITION p_act VALUES LESS THAN ('ACT'),
    PARTITION p_nt VALUES LESS THAN ('NT'),
);

ALTER TABLE ballot
    ADD CONSTRAINT ballot_candelection_fk FOREIGN KEY ( candelection_candelectionid,
                                                        candelectioncode,
                                                        candelectionelectoratename )
        REFERENCES candelection ( candelectionid,
                                  election_electioncode,
                                  electorate_electoratename );

ALTER TABLE ballotissuance
    ADD CONSTRAINT ballotissuance_election_fk FOREIGN KEY ( election_electioncode )
        REFERENCES election ( electioncode );

ALTER TABLE ballotissuance
    ADD CONSTRAINT ballotissuance_voter_fk FOREIGN KEY ( voter_voterid )
        REFERENCES voter ( voterid );

ALTER TABLE candelection
    ADD CONSTRAINT candelection_candidate_fk FOREIGN KEY ( candidate_candid,
                                                           candidate_partycode )
        REFERENCES candidate ( candid,
                               party_partycode );

ALTER TABLE candelection
    ADD CONSTRAINT candelection_election_fk FOREIGN KEY ( election_electioncode )
        REFERENCES election ( electioncode );

ALTER TABLE candelection
    ADD CONSTRAINT candelection_electorate_fk FOREIGN KEY ( electorate_electoratename )
        REFERENCES electorate ( electoratename );

ALTER TABLE candidate
    ADD CONSTRAINT candidate_party_fk FOREIGN KEY ( party_partycode )
        REFERENCES party ( partycode );

ALTER TABLE iterationresult
    ADD CONSTRAINT iterationresult_result_fk FOREIGN KEY ( result_resultid,
                                                           resultcandelectionid,
                                                           resultcandelectioncode,
                                                           resultcandelectionelectorate )
        REFERENCES result ( resultid,
                            candelection_candelectionid,
                            candelectioncode,
                            candelectionelectoratename );

ALTER TABLE preference
    ADD CONSTRAINT preference_ballot_fk FOREIGN KEY ( ballot_ballotid )
        REFERENCES ballot ( ballotid );

ALTER TABLE preference
    ADD CONSTRAINT preference_candidate_fk FOREIGN KEY ( candidate_candid,
                                                         candidate_party_partycode )
        REFERENCES candidate ( candid,
                               party_partycode );

ALTER TABLE result
    ADD CONSTRAINT result_candelection_fk FOREIGN KEY ( candelection_candelectionid,
                                                        candelectioncode,
                                                        candelectionelectoratename )
        REFERENCES candelection ( candelectionid,
                                  election_electioncode,
                                  electorate_electoratename );

ALTER TABLE voter
    ADD CONSTRAINT voter_electorate_fk FOREIGN KEY ( electorate_electoratename )
        REFERENCES electorate ( electoratename );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
